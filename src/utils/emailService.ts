interface EmailData {
  to: string
  subject: string
  html: string
  attachments?: Array<{
    filename: string
    content: string
    contentType: string
  }>
}

interface PurchaseDetails {
  orderId: string
  planName: string
  price: number
  duration: string
  data: string
  customerEmail: string
  customerName: string
  qrCodeUrl: string
  activationInstructions: string
  language?: string
}

// EmailJS configuration removed - API keys cleared
const EMAILJS_CONFIG = {
  serviceId: '',
  templateId: '',
  publicKey: ''
}

// Â§öË®ÄË™û„ÉÜ„Ç≠„Çπ„ÉàÂÆöÁæ©
const emailTexts = {
  en: {
    subject: 'üéâ Your Japan eSIM is Ready! Order #{{order_id}} - Datapocket',
    title: 'Your Japan eSIM is ready!',
    greeting: 'Dear {{customer_name}},',
    thankYou: 'Thank you for choosing Datapocket! Your Japan eSIM has been successfully processed and is ready to use.',
    orderDetails: 'üìã Order Details',
    orderId: 'Order ID:',
    plan: 'Plan:',
    duration: 'Duration:',
    data: 'Data:',
    price: 'Price:',
    status: 'Status:',
    readyToActivate: '‚úÖ Ready to activate',
    freePlan: 'üéÅ FREE (Test Plan)',
    importantInfo: '‚ö†Ô∏è Important Information',
    importantPoints: [
      'Keep this email safe - you\'ll need the QR code to activate your eSIM',
      'Your eSIM can be activated before or during your trip to Japan',
      'Make sure your device is unlocked and supports eSIM technology'
    ],
    qrCodeTitle: 'üì± Your eSIM QR Code',
    scanInstruction: 'Scan this QR code to activate your eSIM',
    activationSteps: 'üöÄ Activation Steps',
    steps: [
      'Open Settings ‚Üí Cellular/Mobile Data',
      'Tap "Add Cellular Plan" or "Add eSIM"',
      'Scan the QR code above',
      'Follow the setup wizard (2-3 minutes)',
      'Enjoy your Japan adventure! üáØüáµ'
    ],
    proTip: 'üí° Pro Tip:',
    proTipText: 'You can activate this eSIM before your trip or when you arrive in Japan. The data allowance starts when you first connect to a Japanese network.',
    needHelp: 'üìû Need Help? Contact Support',
    supportInfo: 'üÜò Support Information',
    phone: 'üìû Phone:',
    email: 'üìß Email:',
    hours: 'üïí Hours:',
    languages: 'üåê Languages:',
    hoursText: '9:00-18:00 (Weekdays JST)',
    languagesText: 'English, Êó•Êú¨Ë™û, ‰∏≠Êñá, ÌïúÍµ≠Ïñ¥',
    accountAccess: 'You can also access your QR code anytime by logging into your account at',
    adventureReady: 'üéå Ready for your Japan adventure?',
    adventureText: 'With Datapocket, you\'ll stay connected from Tokyo to Kyoto, Osaka to Hiroshima!',
    footer: 'Datapocket - Your Japan Connection',
    copyright: '¬© 2024 Datapocket. All rights reserved.',
    sentTo: 'This email was sent to {{customer_email}}',
    enjoyJapan: 'üå∏ Have an amazing time in Japan! üå∏'
  },
  ja: {
    subject: 'üéâ Êó•Êú¨eSIM„ÅÆÊ∫ñÂÇô„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅÊ≥®Êñá #{{order_id}} - Datapocket',
    title: 'Êó•Êú¨eSIM„ÅÆÊ∫ñÂÇô„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ',
    greeting: '{{customer_name}} Êßò',
    thankYou: 'Datapocket„Çí„ÅäÈÅ∏„Å≥„ÅÑ„Åü„Å†„Åç„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅÊó•Êú¨eSIM„ÅÆÂá¶ÁêÜ„ÅåÊ≠£Â∏∏„Å´ÂÆå‰∫Ü„Åó„ÄÅ„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åë„Åæ„Åô„ÄÇ',
    orderDetails: 'üìã „ÅîÊ≥®ÊñáË©≥Á¥∞',
    orderId: 'Ê≥®ÊñáID:',
    plan: '„Éó„É©„É≥:',
    duration: 'ÊúâÂäπÊúüÈñì:',
    data: '„Éá„Éº„ÇøÈáè:',
    price: 'ÊñôÈáë:',
    status: 'Áä∂ÊÖã:',
    readyToActivate: '‚úÖ ÊúâÂäπÂåñÊ∫ñÂÇôÂÆå‰∫Ü',
    freePlan: 'üéÅ ÁÑ°ÊñôÔºà„ÉÜ„Çπ„Éà„Éó„É©„É≥Ôºâ',
    importantInfo: '‚ö†Ô∏è ÈáçË¶Å„Å™ÊÉÖÂ†±',
    importantPoints: [
      '„Åì„ÅÆ„É°„Éº„É´„ÇíÂ§ßÂàá„Å´‰øùÁÆ°„Åó„Å¶„Åè„Å†„Åï„ÅÑ - eSIM„ÅÆÊúâÂäπÂåñ„Å´QR„Ç≥„Éº„Éâ„ÅåÂøÖË¶Å„Åß„Åô',
      'eSIM„ÅØÊó•Êú¨ÊóÖË°åÂâç„Åæ„Åü„ÅØÊóÖË°å‰∏≠„Å´ÊúâÂäπÂåñ„Åß„Åç„Åæ„Åô',
      '„Éá„Éê„Ç§„Çπ„ÅÆSIM„É≠„ÉÉ„ÇØ„ÅåËß£Èô§„Åï„Çå„ÄÅeSIMÊäÄË°ì„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ'
    ],
    qrCodeTitle: 'üì± eSIM QR„Ç≥„Éº„Éâ',
    scanInstruction: '„Åì„ÅÆQR„Ç≥„Éº„Éâ„Çí„Çπ„Ç≠„É£„É≥„Åó„Å¶eSIM„ÇíÊúâÂäπÂåñ„Åó„Å¶„Åè„Å†„Åï„ÅÑ',
    activationSteps: 'üöÄ ÊúâÂäπÂåñÊâãÈ†Ü',
    steps: [
      'Ë®≠ÂÆö ‚Üí „É¢„Éê„Ç§„É´ÈÄö‰ø°„ÇíÈñã„Åè',
      '„Äå„É¢„Éê„Ç§„É´ÈÄö‰ø°„Éó„É©„É≥„ÇíËøΩÂä†„Äç„Åæ„Åü„ÅØ„ÄåeSIM„ÇíËøΩÂä†„Äç„Çí„Çø„ÉÉ„Éó',
      '‰∏äË®ò„ÅÆQR„Ç≥„Éº„Éâ„Çí„Çπ„Ç≠„É£„É≥',
      '„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Ç¶„Ç£„Ç∂„Éº„Éâ„Å´Âæì„ÅÜÔºà2-3ÂàÜÔºâ',
      'Êó•Êú¨„ÅÆÂÜíÈô∫„Çí„ÅäÊ•Ω„Åó„Åø„Åè„Å†„Åï„ÅÑÔºÅ üáØüáµ'
    ],
    proTip: 'üí° „Éó„É≠„ÅÆ„Éí„É≥„Éà:',
    proTipText: '„Åì„ÅÆeSIM„ÅØÊóÖË°åÂâç„Åæ„Åü„ÅØÊó•Êú¨Âà∞ÁùÄÊôÇ„Å´ÊúâÂäπÂåñ„Åß„Åç„Åæ„Åô„ÄÇ„Éá„Éº„Çø‰ΩøÁî®Èáè„ÅØÊó•Êú¨„ÅÆ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Å´ÂàùÂõûÊé•Á∂öÊôÇ„Åã„ÇâÈñãÂßã„Åï„Çå„Åæ„Åô„ÄÇ',
    needHelp: 'üìû „Çµ„Éù„Éº„Éà„ÅåÂøÖË¶Å„Åß„Åô„ÅãÔºü„ÅäÂïè„ÅÑÂêà„Çè„Åõ',
    supportInfo: 'üÜò „Çµ„Éù„Éº„ÉàÊÉÖÂ†±',
    phone: 'üìû ÈõªË©±:',
    email: 'üìß „É°„Éº„É´:',
    hours: 'üïí Âñ∂Ê•≠ÊôÇÈñì:',
    languages: 'üåê ÂØæÂøúË®ÄË™û:',
    hoursText: '9:00-18:00ÔºàÂπ≥Êó• JSTÔºâ',
    languagesText: 'English, Êó•Êú¨Ë™û, ‰∏≠Êñá, ÌïúÍµ≠Ïñ¥',
    accountAccess: 'QR„Ç≥„Éº„Éâ„Å´„ÅØ„ÄÅdatapocket.jp„ÅÆ„Ç¢„Ç´„Ç¶„É≥„Éà„Å´„É≠„Ç∞„Ç§„É≥„Åó„Å¶„ÅÑ„Å§„Åß„ÇÇ„Ç¢„ÇØ„Çª„Çπ„Åß„Åç„Åæ„Åô„ÄÇ',
    adventureReady: 'üéå Êó•Êú¨„ÅÆÂÜíÈô∫„ÅÆÊ∫ñÂÇô„ÅØ„Åß„Åç„Åæ„Åó„Åü„ÅãÔºü',
    adventureText: 'Datapocket„Åß„ÄÅÊù±‰∫¨„Åã„Çâ‰∫¨ÈÉΩ„ÄÅÂ§ßÈò™„Åã„ÇâÂ∫ÉÂ≥∂„Åæ„Åß„ÄÅ„Å§„Å™„Åå„ÇäÁ∂ö„Åë„Åæ„Åó„Çá„ÅÜÔºÅ',
    footer: 'Datapocket - Your Japan Connection',
    copyright: '¬© 2024 Datapocket. All rights reserved.',
    sentTo: '„Åì„ÅÆ„É°„Éº„É´„ÅØ {{customer_email}} „Å´ÈÄÅ‰ø°„Åï„Çå„Åæ„Åó„Åü',
    enjoyJapan: 'üå∏ Á¥†Êô¥„Çâ„Åó„ÅÑÊó•Êú¨„ÅÆÊôÇÈñì„Çí„ÅäÈÅé„Åî„Åó„Åè„Å†„Åï„ÅÑÔºÅ üå∏'
  }
}

// EmailJSÂàùÊúüÂåñ - disabled due to API key removal
const initEmailJS = () => {
  console.log('üìß EmailJS disabled - API keys removed')
}

// EmailJSÁµåÁî±„Åß„É°„Éº„É´ÈÄÅ‰ø° - disabled
export const sendEmailViaEmailJS = async (templateParams: any) => {
  console.log('üìß Email service disabled - API keys removed')
  return { success: false, message: 'Email service disabled - API keys removed' }
}

export const sendPurchaseConfirmationEmail = async (purchaseDetails: PurchaseDetails) => {
  console.log('üìß Purchase confirmation email disabled - API keys removed')
  
  // Show notification that email service is disabled
  if (typeof window !== 'undefined') {
    const notification = document.createElement('div')
    notification.innerHTML = `
      <div style="
        position: fixed; 
        top: 20px; 
        right: 20px; 
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); 
        color: white; 
        padding: 15px 20px; 
        border-radius: 10px; 
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        z-index: 10000;
        font-family: 'Poppins', sans-serif;
        max-width: 350px;
      ">
        <div style="display: flex; align-items: center;">
          <span style="font-size: 1.5rem; margin-right: 10px;">‚ö†Ô∏è</span>
          <div>
            <div style="font-weight: bold;">Email Service Disabled</div>
            <div style="font-size: 0.9rem; opacity: 0.9;">
              API keys have been removed
            </div>
            <div style="font-size: 0.8rem; opacity: 0.8; margin-top: 5px;">
              Order: ${purchaseDetails.orderId}
            </div>
          </div>
        </div>
      </div>
    `
    document.body.appendChild(notification)
    
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification)
      }
    }, 5000)
  }

  return { success: false, message: 'Email service disabled - API keys removed' }
}

export const sendActivationInstructions = async (customerEmail: string, planName: string, language: string = 'en') => {
  console.log('üìß Activation instructions disabled - API keys removed')
  return false
}

// „É°„Éº„É´ÈÄÅ‰ø°„ÉÜ„Çπ„ÉàÈñ¢Êï∞
export const testEmailService = async (testEmail: string, language: string = 'en') => {
  console.log('üìß Email test disabled - API keys removed')
  return { success: false, message: 'Email service disabled - API keys removed' }
}

// EmailJSË®≠ÂÆöÁ¢∫Ë™çÈñ¢Êï∞
export const checkEmailJSConfig = () => {
  console.log('üìß EmailJS Configuration: Disabled - API keys removed')
  return EMAILJS_CONFIG
}